CMAKE_MINIMUM_REQUIRED(VERSION 3.19)
SET(PRJ bres_movie)
PROJECT(${PRJ} CXX)

SET(HOMEDIR $ENV{HOME})
SET(INSTALL_DIR ${HOMEDIR}/setup)
SET(WEBRTC_DIR ${HOMEDIR}/setup/libwebrtc-bin)
SET(WEBRTC_DIR ${HOMEDIR}/setup/libwebrtc-bin/)

ADD_LIBRARY(libwebrtc STATIC IMPORTED)
SET_PROPERTY(TARGET libwebrtc PROPERTY IMPORTED_LOCATION "${WEBRTC_DIR}/lib/libwebrtc.a")


SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -o0 -g")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DWEBRTC_MAC -DWEBRTC_POSIX -D__OSX__")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -fvisibility-inlines-hidden")


SET(CMAKE_CXX_STANDARD, 17)
SET(CMAKE_MACOSX_RPATH TRUE)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC OFF)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
LIST(APPEND CMAKE_INSTALL_RPATH "@loader_path/" "@executable_path/")

INCLUDE_DIRECTORIES(${OPENSSL_INCLUDE_DIR})

LINK_DIRECTORIES("/usr/local/lib/")
LINK_DIRECTORIES("/usr/lib/")
INCLUDE_DIRECTORIES("/usr/local/include/")
INCLUDE_DIRECTORIES("/usr/include/")
INCLUDE_DIRECTORIES("./inc")
INCLUDE_DIRECTORIES("${WEBRTC_DIR}/include")
INCLUDE_DIRECTORIES("${WEBRTC_DIR}/include/third_party/libyuv/include")
INCLUDE_DIRECTORIES("${WEBRTC_DIR}/include/third_party/libyuv")

FIND_PACKAGE(libwebsockets CONFIG REQUIRED)
FIND_PACKAGE(PkgConfig)

FILE(GLOB SOURCE_FILES ./src/*.cc)
FILE(GLOB WEBSOCKETS_SOURCE_FILES ./src/websockets/*.cc)
FILE(GLOB WEBRTC_SOURCE_FILES ./src/webrtc/*.cc)


ADD_EXECUTABLE(
    ${PRJ}
    ${SOURCE_FILES}
    ${WEBSOCKETS_SOURCE_FILES}
    ${WEBRTC_SOURCE_FILES}
)
TARGET_LINK_LIBRARIES(${PRJ} libwebrtc)
TARGET_LINK_LIBRARIES(${PRJ} pthread)
TARGET_LINK_LIBRARIES(${PRJ} z)
TARGET_LINK_LIBRARIES(${PRJ} websockets)
TARGET_LINK_LIBRARIES(${PRJ} avutil)
TARGET_LINK_LIBRARIES(${PRJ} avcodec)
TARGET_LINK_LIBRARIES(${PRJ} avformat)
TARGET_LINK_LIBRARIES(${PRJ} swscale)
TARGET_LINK_LIBRARIES(${PRJ} swresample)

IF (UNIX AND NOT APPLE)
ELSE()
    message(STATUS "Including APPLE's foundation and AVFoundation frameworks")
    TARGET_LINK_LIBRARIES(${PRJ} "-framework Cocoa")
    TARGET_LINK_LIBRARIES(${PRJ} "-framework CoreAudio")
    TARGET_LINK_LIBRARIES(${PRJ} "-framework AudioToolbox")
    TARGET_LINK_LIBRARIES(${PRJ} "-framework AudioUnit")
ENDIF()
